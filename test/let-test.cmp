((env continue)
 (env proc argl unev continue temp1 temp2 val)
 (proc argl val)
 (
  (assign proc (op make-compiled-procedure) (label entry1) (reg env))
  (goto (label after-lambda2))
 entry1
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (a b)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const +) (reg env))
  (assign val (op lookup-variable-value) (const b) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const a) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch3))
 compiled-branch4
  (assign continue (label after-call5))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch3
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call5
  (restore env)
  (perform (op set-variable-value!) (const a) (reg val) (reg env))
  (assign val (const a))
  (restore continue)
  (assign proc (op make-compiled-procedure) (label entry6) (reg env))
  (goto (label after-lambda7))
 entry6
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (assign val (op lookup-variable-value) (const a) (reg env))
  (goto (reg continue))
 after-lambda7
  (assign argl (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch8))
 compiled-branch9
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch8
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call10
 after-lambda2
  (assign val (const 2))
  (assign argl (op list) (reg val))
  (assign val (const 1))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch11))
 compiled-branch12
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch11
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call13
 )
)