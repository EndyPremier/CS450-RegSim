((env continue)
 (env proc argl unev continue temp1 temp2 val)
 (proc argl val)
 (
  (assign val (op make-compiled-procedure) (label entry1) (reg env))
  (goto (label after-lambda2))
 entry1
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp env)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const self-evaluating?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch6))
 compiled-branch7
  (assign continue (label after-call8))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch6
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call8
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch4))
 true-branch3
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (goto (reg continue))
 false-branch4
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const variable?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch12))
 compiled-branch13
  (assign continue (label after-call14))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch12
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call14
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch10))
 true-branch9
  (assign proc (op lookup-variable-value) (const lookup-variable-value) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch15))
 compiled-branch16
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch15
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call17
 false-branch10
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const quoted?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch21))
 compiled-branch22
  (assign continue (label after-call23))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch21
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call23
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch19))
 true-branch18
  (assign proc (op lookup-variable-value) (const text-of-quotation) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch24))
 compiled-branch25
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch24
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call26
 false-branch19
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const assignment?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch30))
 compiled-branch31
  (assign continue (label after-call32))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch30
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call32
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch28))
 true-branch27
  (assign proc (op lookup-variable-value) (const eval-assignment) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch33))
 compiled-branch34
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch33
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call35
 false-branch28
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const definition?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch39))
 compiled-branch40
  (assign continue (label after-call41))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch39
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call41
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch37))
 true-branch36
  (assign proc (op lookup-variable-value) (const eval-definition) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch42))
 compiled-branch43
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch42
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call44
 false-branch37
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const if?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch48))
 compiled-branch49
  (assign continue (label after-call50))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch48
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call50
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch46))
 true-branch45
  (assign proc (op lookup-variable-value) (const eval-if) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch51))
 compiled-branch52
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch51
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call53
 false-branch46
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const lambda?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch57))
 compiled-branch58
  (assign continue (label after-call59))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch57
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call59
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch55))
 true-branch54
  (assign proc (op lookup-variable-value) (const make-procedure) (reg env))
  (save continue)
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const lambda-body) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch63))
 compiled-branch64
  (assign continue (label after-call65))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch63
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call65
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const lambda-parameters) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch60))
 compiled-branch61
  (assign continue (label after-call62))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch60
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call62
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch66))
 compiled-branch67
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch66
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call68
 false-branch55
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const begin?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch72))
 compiled-branch73
  (assign continue (label after-call74))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch72
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call74
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch70))
 true-branch69
  (assign proc (op lookup-variable-value) (const eval-sequence) (reg env))
  (save continue)
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const begin-actions) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch75))
 compiled-branch76
  (assign continue (label after-call77))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch75
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call77
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch78))
 compiled-branch79
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch78
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call80
 false-branch70
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const cond?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch84))
 compiled-branch85
  (assign continue (label after-call86))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch84
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call86
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch82))
 true-branch81
  (assign proc (op lookup-variable-value) (const xeval) (reg env))
  (save continue)
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const cond->if) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch87))
 compiled-branch88
  (assign continue (label after-call89))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch87
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call89
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch90))
 compiled-branch91
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch90
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call92
 false-branch82
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const application?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch96))
 compiled-branch97
  (assign continue (label after-call98))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch96
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call98
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch94))
 true-branch93
  (assign proc (op lookup-variable-value) (const xapply) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const list-of-values) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const operands) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch105))
 compiled-branch106
  (assign continue (label after-call107))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch105
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call107
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch108))
 compiled-branch109
  (assign continue (label after-call110))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch108
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call110
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const xeval) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const operator) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch99))
 compiled-branch100
  (assign continue (label after-call101))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch99
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call101
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch102))
 compiled-branch103
  (assign continue (label after-call104))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch102
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call104
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch111))
 compiled-branch112
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch111
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call113
 false-branch94
  (assign proc (op lookup-variable-value) (const error) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const "Unknown expression type -- XEVAL "))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch114))
 compiled-branch115
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch114
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call116
 after-if95
 after-if83
 after-if71
 after-if56
 after-if47
 after-if38
 after-if29
 after-if20
 after-if11
 after-if5
 after-lambda2
  (perform (op define-variable!) (const xeval) (reg val) (reg env))
  (assign val (const xeval))
  (assign val (op make-compiled-procedure) (label entry117) (reg env))
  (goto (label after-lambda118))
 entry117
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (procedure arguments)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const primitive-procedure?) (reg env))
  (assign val (op lookup-variable-value) (const procedure) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch122))
 compiled-branch123
  (assign continue (label after-call124))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch122
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call124
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch120))
 true-branch119
  (assign proc (op lookup-variable-value) (const apply-primitive-procedure) (reg env))
  (assign val (op lookup-variable-value) (const arguments) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const procedure) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch125))
 compiled-branch126
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch125
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call127
 false-branch120
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const compound-procedure?) (reg env))
  (assign val (op lookup-variable-value) (const procedure) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch131))
 compiled-branch132
  (assign continue (label after-call133))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch131
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call133
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch129))
 true-branch128
  (assign proc (op lookup-variable-value) (const eval-sequence) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const xtend-environment) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const procedure-environment) (reg env))
  (assign val (op lookup-variable-value) (const procedure) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch140))
 compiled-branch141
  (assign continue (label after-call142))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch140
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call142
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const arguments) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (assign proc (op lookup-variable-value) (const procedure-parameters) (reg env))
  (assign val (op lookup-variable-value) (const procedure) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch137))
 compiled-branch138
  (assign continue (label after-call139))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch137
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call139
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch143))
 compiled-branch144
  (assign continue (label after-call145))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch143
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call145
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const procedure-body) (reg env))
  (assign val (op lookup-variable-value) (const procedure) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch134))
 compiled-branch135
  (assign continue (label after-call136))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch134
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call136
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch146))
 compiled-branch147
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch146
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call148
 false-branch129
  (assign proc (op lookup-variable-value) (const error) (reg env))
  (assign val (op lookup-variable-value) (const procedure) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const "Unknown procedure type -- XAPPLY "))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch149))
 compiled-branch150
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch149
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call151
 after-if130
 after-if121
 after-lambda118
  (perform (op define-variable!) (const xapply) (reg val) (reg env))
  (assign val (const xapply))
  (assign val (op make-compiled-procedure) (label entry152) (reg env))
  (goto (label after-lambda153))
 entry152
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exps env)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const no-operands?) (reg env))
  (assign val (op lookup-variable-value) (const exps) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch157))
 compiled-branch158
  (assign continue (label after-call159))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch157
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call159
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch155))
 true-branch154
  (assign val (const ()))
  (goto (reg continue))
 false-branch155
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const list-of-values) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const rest-operands) (reg env))
  (assign val (op lookup-variable-value) (const exps) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch166))
 compiled-branch167
  (assign continue (label after-call168))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch166
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call168
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch169))
 compiled-branch170
  (assign continue (label after-call171))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch169
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call171
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const xeval) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const first-operand) (reg env))
  (assign val (op lookup-variable-value) (const exps) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch160))
 compiled-branch161
  (assign continue (label after-call162))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch160
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call162
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch163))
 compiled-branch164
  (assign continue (label after-call165))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch163
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call165
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch172))
 compiled-branch173
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch172
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call174
 after-if156
 after-lambda153
  (perform (op define-variable!) (const list-of-values) (reg val) (reg env))
  (assign val (const list-of-values))
  (assign val (op make-compiled-procedure) (label entry175) (reg env))
  (goto (label after-lambda176))
 entry175
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp env)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const true?) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const xeval) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const if-predicate) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch180))
 compiled-branch181
  (assign continue (label after-call182))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch180
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call182
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch183))
 compiled-branch184
  (assign continue (label after-call185))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch183
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call185
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch186))
 compiled-branch187
  (assign continue (label after-call188))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch186
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call188
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch178))
 true-branch177
  (assign proc (op lookup-variable-value) (const xeval) (reg env))
  (save continue)
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const if-consequent) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch189))
 compiled-branch190
  (assign continue (label after-call191))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch189
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call191
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch192))
 compiled-branch193
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch192
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call194
 false-branch178
  (assign proc (op lookup-variable-value) (const xeval) (reg env))
  (save continue)
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const if-alternative) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch195))
 compiled-branch196
  (assign continue (label after-call197))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch195
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call197
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch198))
 compiled-branch199
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch198
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call200
 after-if179
 after-lambda176
  (perform (op define-variable!) (const eval-if) (reg val) (reg env))
  (assign val (const eval-if))
  (assign val (op make-compiled-procedure) (label entry201) (reg env))
  (goto (label after-lambda202))
 entry201
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exps env)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const last-exp?) (reg env))
  (assign val (op lookup-variable-value) (const exps) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch206))
 compiled-branch207
  (assign continue (label after-call208))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch206
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call208
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch204))
 true-branch203
  (assign proc (op lookup-variable-value) (const xeval) (reg env))
  (save continue)
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const first-exp) (reg env))
  (assign val (op lookup-variable-value) (const exps) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch209))
 compiled-branch210
  (assign continue (label after-call211))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch209
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call211
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch212))
 compiled-branch213
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch212
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call214
 false-branch204
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const xeval) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const first-exp) (reg env))
  (assign val (op lookup-variable-value) (const exps) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch215))
 compiled-branch216
  (assign continue (label after-call217))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch215
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call217
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch218))
 compiled-branch219
  (assign continue (label after-call220))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch218
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call220
  (restore env)
  (restore continue)
  (assign proc (op lookup-variable-value) (const eval-sequence) (reg env))
  (save continue)
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const rest-exps) (reg env))
  (assign val (op lookup-variable-value) (const exps) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch221))
 compiled-branch222
  (assign continue (label after-call223))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch221
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call223
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch224))
 compiled-branch225
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch224
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call226
 after-if205
 after-lambda202
  (perform (op define-variable!) (const eval-sequence) (reg val) (reg env))
  (assign val (const eval-sequence))
  (assign val (op make-compiled-procedure) (label entry227) (reg env))
  (goto (label after-lambda228))
 entry227
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp env)) (reg argl) (reg env))
  (assign proc (op make-compiled-procedure) (label entry229) (reg env))
  (goto (label after-lambda230))
 entry229
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (name)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const set-variable-value!) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const xeval) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const assignment-value) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch231))
 compiled-branch232
  (assign continue (label after-call233))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch231
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call233
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch234))
 compiled-branch235
  (assign continue (label after-call236))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch234
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call236
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (assign val (op lookup-variable-value) (const name) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch237))
 compiled-branch238
  (assign continue (label after-call239))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch237
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call239
  (restore env)
  (restore continue)
  (assign val (op lookup-variable-value) (const name) (reg env))
  (goto (reg continue))
 after-lambda230
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const assignment-variable) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch240))
 compiled-branch241
  (assign continue (label after-call242))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch240
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call242
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch243))
 compiled-branch244
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch243
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call245
 after-lambda228
  (perform (op define-variable!) (const eval-assignment) (reg val) (reg env))
  (assign val (const eval-assignment))
  (assign val (op make-compiled-procedure) (label entry246) (reg env))
  (goto (label after-lambda247))
 entry246
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp env)) (reg argl) (reg env))
  (assign proc (op make-compiled-procedure) (label entry248) (reg env))
  (goto (label after-lambda249))
 entry248
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (name)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const define-variable!) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const xeval) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const definition-value) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch250))
 compiled-branch251
  (assign continue (label after-call252))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch250
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call252
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch253))
 compiled-branch254
  (assign continue (label after-call255))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch253
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call255
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (assign val (op lookup-variable-value) (const name) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch256))
 compiled-branch257
  (assign continue (label after-call258))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch256
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call258
  (restore env)
  (restore continue)
  (assign val (op lookup-variable-value) (const name) (reg env))
  (goto (reg continue))
 after-lambda249
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const definition-variable) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch259))
 compiled-branch260
  (assign continue (label after-call261))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch259
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call261
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch262))
 compiled-branch263
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch262
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call264
 after-lambda247
  (perform (op define-variable!) (const eval-definition) (reg val) (reg env))
  (assign val (const eval-definition))
  (assign val (op make-compiled-procedure) (label entry265) (reg env))
  (goto (label after-lambda266))
 entry265
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const number?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch270))
 compiled-branch271
  (assign continue (label after-call272))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch270
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call272
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch268))
 true-branch267
  (assign proc (op lookup-variable-value) (const number?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch273))
 compiled-branch274
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch273
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call275
 false-branch268
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const string?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch279))
 compiled-branch280
  (assign continue (label after-call281))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch279
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call281
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch277))
 true-branch276
  (assign proc (op lookup-variable-value) (const string?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch282))
 compiled-branch283
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch282
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call284
 false-branch277
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const boolean?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch288))
 compiled-branch289
  (assign continue (label after-call290))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch288
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call290
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch286))
 true-branch285
  (assign proc (op lookup-variable-value) (const boolean?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch291))
 compiled-branch292
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch291
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call293
 false-branch286
  (assign val (const #f))
  (goto (reg continue))
 after-if287
 after-if278
 after-if269
 after-lambda266
  (perform (op define-variable!) (const self-evaluating?) (reg val) (reg env))
  (assign val (const self-evaluating?))
  (assign val (op make-compiled-procedure) (label entry294) (reg env))
  (goto (label after-lambda295))
 entry294
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const symbol?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch296))
 compiled-branch297
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch296
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call298
 after-lambda295
  (perform (op define-variable!) (const variable?) (reg val) (reg env))
  (assign val (const variable?))
  (assign val (op make-compiled-procedure) (label entry299) (reg env))
  (goto (label after-lambda300))
 entry299
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const tagged-list?) (reg env))
  (assign val (const quote))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch301))
 compiled-branch302
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch301
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call303
 after-lambda300
  (perform (op define-variable!) (const quoted?) (reg val) (reg env))
  (assign val (const quoted?))
  (assign val (op make-compiled-procedure) (label entry304) (reg env))
  (goto (label after-lambda305))
 entry304
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cadr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch306))
 compiled-branch307
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch306
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call308
 after-lambda305
  (perform (op define-variable!) (const text-of-quotation) (reg val) (reg env))
  (assign val (const text-of-quotation))
  (assign val (op make-compiled-procedure) (label entry309) (reg env))
  (goto (label after-lambda310))
 entry309
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp tag)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const pair?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch314))
 compiled-branch315
  (assign continue (label after-call316))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch314
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call316
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch312))
 true-branch311
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (save continue)
  (save proc)
  (assign val (op lookup-variable-value) (const tag) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch317))
 compiled-branch318
  (assign continue (label after-call319))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch317
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call319
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch320))
 compiled-branch321
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch320
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call322
 false-branch312
  (assign val (const #f))
  (goto (reg continue))
 after-if313
 after-lambda310
  (perform (op define-variable!) (const tagged-list?) (reg val) (reg env))
  (assign val (const tagged-list?))
  (assign val (op make-compiled-procedure) (label entry323) (reg env))
  (goto (label after-lambda324))
 entry323
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const tagged-list?) (reg env))
  (assign val (const set!))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch325))
 compiled-branch326
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch325
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call327
 after-lambda324
  (perform (op define-variable!) (const assignment?) (reg val) (reg env))
  (assign val (const assignment?))
  (assign val (op make-compiled-procedure) (label entry328) (reg env))
  (goto (label after-lambda329))
 entry328
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cadr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch330))
 compiled-branch331
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call332
 after-lambda329
  (perform (op define-variable!) (const assignment-variable) (reg val) (reg env))
  (assign val (const assignment-variable))
  (assign val (op make-compiled-procedure) (label entry333) (reg env))
  (goto (label after-lambda334))
 entry333
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const caddr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch335))
 compiled-branch336
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch335
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call337
 after-lambda334
  (perform (op define-variable!) (const assignment-value) (reg val) (reg env))
  (assign val (const assignment-value))
  (assign val (op make-compiled-procedure) (label entry338) (reg env))
  (goto (label after-lambda339))
 entry338
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const tagged-list?) (reg env))
  (assign val (const define))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch340))
 compiled-branch341
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch340
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call342
 after-lambda339
  (perform (op define-variable!) (const definition?) (reg val) (reg env))
  (assign val (const definition?))
  (assign val (op make-compiled-procedure) (label entry343) (reg env))
  (goto (label after-lambda344))
 entry343
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const symbol?) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cadr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch348))
 compiled-branch349
  (assign continue (label after-call350))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch348
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call350
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch351))
 compiled-branch352
  (assign continue (label after-call353))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch351
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call353
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch346))
 true-branch345
  (assign proc (op lookup-variable-value) (const cadr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch354))
 compiled-branch355
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch354
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call356
 false-branch346
  (assign proc (op lookup-variable-value) (const caadr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch357))
 compiled-branch358
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch357
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call359
 after-if347
 after-lambda344
  (perform (op define-variable!) (const definition-variable) (reg val) (reg env))
  (assign val (const definition-variable))
  (assign val (op make-compiled-procedure) (label entry360) (reg env))
  (goto (label after-lambda361))
 entry360
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const symbol?) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cadr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch365))
 compiled-branch366
  (assign continue (label after-call367))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch365
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call367
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch368))
 compiled-branch369
  (assign continue (label after-call370))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch368
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call370
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch363))
 true-branch362
  (assign proc (op lookup-variable-value) (const caddr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch371))
 compiled-branch372
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch371
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call373
 false-branch363
  (assign proc (op lookup-variable-value) (const make-lambda) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cddr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch377))
 compiled-branch378
  (assign continue (label after-call379))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch377
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call379
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const cdadr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch374))
 compiled-branch375
  (assign continue (label after-call376))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch374
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call376
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch380))
 compiled-branch381
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch380
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call382
 after-if364
 after-lambda361
  (perform (op define-variable!) (const definition-value) (reg val) (reg env))
  (assign val (const definition-value))
  (assign val (op make-compiled-procedure) (label entry383) (reg env))
  (goto (label after-lambda384))
 entry383
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const tagged-list?) (reg env))
  (assign val (const lambda))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch385))
 compiled-branch386
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch385
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call387
 after-lambda384
  (perform (op define-variable!) (const lambda?) (reg val) (reg env))
  (assign val (const lambda?))
  (assign val (op make-compiled-procedure) (label entry388) (reg env))
  (goto (label after-lambda389))
 entry388
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cadr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch390))
 compiled-branch391
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch390
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call392
 after-lambda389
  (perform (op define-variable!) (const lambda-parameters) (reg val) (reg env))
  (assign val (const lambda-parameters))
  (assign val (op make-compiled-procedure) (label entry393) (reg env))
  (goto (label after-lambda394))
 entry393
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cddr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch395))
 compiled-branch396
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch395
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call397
 after-lambda394
  (perform (op define-variable!) (const lambda-body) (reg val) (reg env))
  (assign val (const lambda-body))
  (assign val (op make-compiled-procedure) (label entry398) (reg env))
  (goto (label after-lambda399))
 entry398
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (parameters body)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (assign val (op lookup-variable-value) (const body) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const parameters) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch400))
 compiled-branch401
  (assign continue (label after-call402))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch400
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call402
  (assign argl (op list) (reg val))
  (assign val (const lambda))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch403))
 compiled-branch404
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch403
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call405
 after-lambda399
  (perform (op define-variable!) (const make-lambda) (reg val) (reg env))
  (assign val (const make-lambda))
  (assign val (op make-compiled-procedure) (label entry406) (reg env))
  (goto (label after-lambda407))
 entry406
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const tagged-list?) (reg env))
  (assign val (const if))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch408))
 compiled-branch409
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch408
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call410
 after-lambda407
  (perform (op define-variable!) (const if?) (reg val) (reg env))
  (assign val (const if?))
  (assign val (op make-compiled-procedure) (label entry411) (reg env))
  (goto (label after-lambda412))
 entry411
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cadr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch413))
 compiled-branch414
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch413
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call415
 after-lambda412
  (perform (op define-variable!) (const if-predicate) (reg val) (reg env))
  (assign val (const if-predicate))
  (assign val (op make-compiled-procedure) (label entry416) (reg env))
  (goto (label after-lambda417))
 entry416
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const caddr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch418))
 compiled-branch419
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch418
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call420
 after-lambda417
  (perform (op define-variable!) (const if-consequent) (reg val) (reg env))
  (assign val (const if-consequent))
  (assign val (op make-compiled-procedure) (label entry421) (reg env))
  (goto (label after-lambda422))
 entry421
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdddr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch426))
 compiled-branch427
  (assign continue (label after-call428))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch426
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call428
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch429))
 compiled-branch430
  (assign continue (label after-call431))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch429
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call431
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch432))
 compiled-branch433
  (assign continue (label after-call434))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch432
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call434
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch424))
 true-branch423
  (assign proc (op lookup-variable-value) (const cadddr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch435))
 compiled-branch436
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch435
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call437
 false-branch424
  (assign val (const #f))
  (goto (reg continue))
 after-if425
 after-lambda422
  (perform (op define-variable!) (const if-alternative) (reg val) (reg env))
  (assign val (const if-alternative))
  (assign val (op make-compiled-procedure) (label entry438) (reg env))
  (goto (label after-lambda439))
 entry438
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (predicate consequent alternative)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const alternative) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const consequent) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (op lookup-variable-value) (const predicate) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (const if))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch440))
 compiled-branch441
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch440
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call442
 after-lambda439
  (perform (op define-variable!) (const make-if) (reg val) (reg env))
  (assign val (const make-if))
  (assign val (op make-compiled-procedure) (label entry443) (reg env))
  (goto (label after-lambda444))
 entry443
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const tagged-list?) (reg env))
  (assign val (const begin))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch445))
 compiled-branch446
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch445
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call447
 after-lambda444
  (perform (op define-variable!) (const begin?) (reg val) (reg env))
  (assign val (const begin?))
  (assign val (op make-compiled-procedure) (label entry448) (reg env))
  (goto (label after-lambda449))
 entry448
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch450))
 compiled-branch451
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch450
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call452
 after-lambda449
  (perform (op define-variable!) (const begin-actions) (reg val) (reg env))
  (assign val (const begin-actions))
  (assign val (op make-compiled-procedure) (label entry453) (reg env))
  (goto (label after-lambda454))
 entry453
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch455))
 compiled-branch456
  (assign continue (label after-call457))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch455
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call457
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch458))
 compiled-branch459
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch458
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call460
 after-lambda454
  (perform (op define-variable!) (const last-exp?) (reg val) (reg env))
  (assign val (const last-exp?))
  (assign val (op make-compiled-procedure) (label entry461) (reg env))
  (goto (label after-lambda462))
 entry461
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch463))
 compiled-branch464
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch463
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call465
 after-lambda462
  (perform (op define-variable!) (const first-exp) (reg val) (reg env))
  (assign val (const first-exp))
  (assign val (op make-compiled-procedure) (label entry466) (reg env))
  (goto (label after-lambda467))
 entry466
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch468))
 compiled-branch469
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch468
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call470
 after-lambda467
  (perform (op define-variable!) (const rest-exps) (reg val) (reg env))
  (assign val (const rest-exps))
  (assign val (op make-compiled-procedure) (label entry471) (reg env))
  (goto (label after-lambda472))
 entry471
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch476))
 compiled-branch477
  (assign continue (label after-call478))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch476
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call478
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch474))
 true-branch473
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (goto (reg continue))
 false-branch474
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const last-exp?) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch482))
 compiled-branch483
  (assign continue (label after-call484))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch482
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call484
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch480))
 true-branch479
  (assign proc (op lookup-variable-value) (const first-exp) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch485))
 compiled-branch486
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch485
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call487
 false-branch480
  (assign proc (op lookup-variable-value) (const make-begin) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch488))
 compiled-branch489
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch488
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call490
 after-if481
 after-if475
 after-lambda472
  (perform (op define-variable!) (const sequence->exp) (reg val) (reg env))
  (assign val (const sequence->exp))
  (assign val (op make-compiled-procedure) (label entry491) (reg env))
  (goto (label after-lambda492))
 entry491
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const begin))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch493))
 compiled-branch494
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch493
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call495
 after-lambda492
  (perform (op define-variable!) (const make-begin) (reg val) (reg env))
  (assign val (const make-begin))
  (assign val (op make-compiled-procedure) (label entry496) (reg env))
  (goto (label after-lambda497))
 entry496
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const pair?) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch498))
 compiled-branch499
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch498
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call500
 after-lambda497
  (perform (op define-variable!) (const application?) (reg val) (reg env))
  (assign val (const application?))
  (assign val (op make-compiled-procedure) (label entry501) (reg env))
  (goto (label after-lambda502))
 entry501
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch503))
 compiled-branch504
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch503
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call505
 after-lambda502
  (perform (op define-variable!) (const operator) (reg val) (reg env))
  (assign val (const operator))
  (assign val (op make-compiled-procedure) (label entry506) (reg env))
  (goto (label after-lambda507))
 entry506
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch508))
 compiled-branch509
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch508
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call510
 after-lambda507
  (perform (op define-variable!) (const operands) (reg val) (reg env))
  (assign val (const operands))
  (assign val (op make-compiled-procedure) (label entry511) (reg env))
  (goto (label after-lambda512))
 entry511
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (ops)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const ops) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch513))
 compiled-branch514
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch513
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call515
 after-lambda512
  (perform (op define-variable!) (const no-operands?) (reg val) (reg env))
  (assign val (const no-operands?))
  (assign val (op make-compiled-procedure) (label entry516) (reg env))
  (goto (label after-lambda517))
 entry516
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (ops)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const ops) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch518))
 compiled-branch519
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch518
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call520
 after-lambda517
  (perform (op define-variable!) (const first-operand) (reg val) (reg env))
  (assign val (const first-operand))
  (assign val (op make-compiled-procedure) (label entry521) (reg env))
  (goto (label after-lambda522))
 entry521
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (ops)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const ops) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch523))
 compiled-branch524
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch523
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call525
 after-lambda522
  (perform (op define-variable!) (const rest-operands) (reg val) (reg env))
  (assign val (const rest-operands))
  (assign val (op make-compiled-procedure) (label entry526) (reg env))
  (goto (label after-lambda527))
 entry526
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const tagged-list?) (reg env))
  (assign val (const cond))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch528))
 compiled-branch529
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch528
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call530
 after-lambda527
  (perform (op define-variable!) (const cond?) (reg val) (reg env))
  (assign val (const cond?))
  (assign val (op make-compiled-procedure) (label entry531) (reg env))
  (goto (label after-lambda532))
 entry531
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch533))
 compiled-branch534
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch533
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call535
 after-lambda532
  (perform (op define-variable!) (const cond-clauses) (reg val) (reg env))
  (assign val (const cond-clauses))
  (assign val (op make-compiled-procedure) (label entry536) (reg env))
  (goto (label after-lambda537))
 entry536
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (clause)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (save continue)
  (save proc)
  (assign val (const else))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const cond-predicate) (reg env))
  (assign val (op lookup-variable-value) (const clause) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch538))
 compiled-branch539
  (assign continue (label after-call540))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch538
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call540
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch541))
 compiled-branch542
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch541
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call543
 after-lambda537
  (perform (op define-variable!) (const cond-else-clause?) (reg val) (reg env))
  (assign val (const cond-else-clause?))
  (assign val (op make-compiled-procedure) (label entry544) (reg env))
  (goto (label after-lambda545))
 entry544
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (clause)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const clause) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch546))
 compiled-branch547
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch546
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call548
 after-lambda545
  (perform (op define-variable!) (const cond-predicate) (reg val) (reg env))
  (assign val (const cond-predicate))
  (assign val (op make-compiled-procedure) (label entry549) (reg env))
  (goto (label after-lambda550))
 entry549
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (clause)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const clause) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch551))
 compiled-branch552
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch551
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call553
 after-lambda550
  (perform (op define-variable!) (const cond-actions) (reg val) (reg env))
  (assign val (const cond-actions))
  (assign val (op make-compiled-procedure) (label entry554) (reg env))
  (goto (label after-lambda555))
 entry554
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const expand-clauses) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cond-clauses) (reg env))
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch556))
 compiled-branch557
  (assign continue (label after-call558))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch556
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call558
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch559))
 compiled-branch560
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch559
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call561
 after-lambda555
  (perform (op define-variable!) (const cond->if) (reg val) (reg env))
  (assign val (const cond->if))
  (assign val (op make-compiled-procedure) (label entry562) (reg env))
  (goto (label after-lambda563))
 entry562
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (clauses)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const clauses) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch567))
 compiled-branch568
  (assign continue (label after-call569))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch567
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call569
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch565))
 true-branch564
  (assign val (const #f))
  (goto (reg continue))
 false-branch565
  (assign proc (op make-compiled-procedure) (label entry570) (reg env))
  (goto (label after-lambda571))
 entry570
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first rest)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const cond-else-clause?) (reg env))
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch575))
 compiled-branch576
  (assign continue (label after-call577))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch575
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call577
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch573))
 true-branch572
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch581))
 compiled-branch582
  (assign continue (label after-call583))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch581
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call583
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch579))
 true-branch578
  (assign proc (op lookup-variable-value) (const sequence->exp) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cond-actions) (reg env))
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch584))
 compiled-branch585
  (assign continue (label after-call586))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch584
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call586
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch587))
 compiled-branch588
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch587
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call589
 false-branch579
  (assign proc (op lookup-variable-value) (const error) (reg env))
  (assign val (op lookup-variable-value) (const clauses) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const "ELSE clause isn't last -- COND->IF "))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch590))
 compiled-branch591
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch590
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call592
 after-if580
 false-branch573
  (assign proc (op lookup-variable-value) (const make-if) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const expand-clauses) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch602))
 compiled-branch603
  (assign continue (label after-call604))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch602
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call604
  (assign argl (op list) (reg val))
  (restore env)
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const sequence->exp) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cond-actions) (reg env))
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch596))
 compiled-branch597
  (assign continue (label after-call598))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch596
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call598
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch599))
 compiled-branch600
  (assign continue (label after-call601))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch599
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call601
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const cond-predicate) (reg env))
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch593))
 compiled-branch594
  (assign continue (label after-call595))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch593
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call595
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch605))
 compiled-branch606
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch605
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call607
 after-if574
 after-lambda571
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const clauses) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch611))
 compiled-branch612
  (assign continue (label after-call613))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch611
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call613
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const clauses) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch608))
 compiled-branch609
  (assign continue (label after-call610))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch608
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call610
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch614))
 compiled-branch615
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch614
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call616
 after-if566
 after-lambda563
  (perform (op define-variable!) (const expand-clauses) (reg val) (reg env))
  (assign val (const expand-clauses))
  (assign val (op make-compiled-procedure) (label entry617) (reg env))
  (goto (label after-lambda618))
 entry617
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (assign val (const #f))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const x) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch619))
 compiled-branch620
  (assign continue (label after-call621))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch619
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call621
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch622))
 compiled-branch623
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch622
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call624
 after-lambda618
  (perform (op define-variable!) (const true?) (reg val) (reg env))
  (assign val (const true?))
  (assign val (op make-compiled-procedure) (label entry625) (reg env))
  (goto (label after-lambda626))
 entry625
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (assign val (const #f))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const x) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch627))
 compiled-branch628
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch627
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call629
 after-lambda626
  (perform (op define-variable!) (const false?) (reg val) (reg env))
  (assign val (const false?))
  (assign val (op make-compiled-procedure) (label entry630) (reg env))
  (goto (label after-lambda631))
 entry630
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (parameters body env)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const body) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (op lookup-variable-value) (const parameters) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (const procedure))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch632))
 compiled-branch633
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch632
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call634
 after-lambda631
  (perform (op define-variable!) (const make-procedure) (reg val) (reg env))
  (assign val (const make-procedure))
  (assign val (op make-compiled-procedure) (label entry635) (reg env))
  (goto (label after-lambda636))
 entry635
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const tagged-list?) (reg env))
  (assign val (const procedure))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch637))
 compiled-branch638
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch637
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call639
 after-lambda636
  (perform (op define-variable!) (const compound-procedure?) (reg val) (reg env))
  (assign val (const compound-procedure?))
  (assign val (op make-compiled-procedure) (label entry640) (reg env))
  (goto (label after-lambda641))
 entry640
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cadr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch642))
 compiled-branch643
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch642
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call644
 after-lambda641
  (perform (op define-variable!) (const procedure-parameters) (reg val) (reg env))
  (assign val (const procedure-parameters))
  (assign val (op make-compiled-procedure) (label entry645) (reg env))
  (goto (label after-lambda646))
 entry645
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const caddr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch647))
 compiled-branch648
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch647
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call649
 after-lambda646
  (perform (op define-variable!) (const procedure-body) (reg val) (reg env))
  (assign val (const procedure-body))
  (assign val (op make-compiled-procedure) (label entry650) (reg env))
  (goto (label after-lambda651))
 entry650
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cadddr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch652))
 compiled-branch653
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch652
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call654
 after-lambda651
  (perform (op define-variable!) (const procedure-environment) (reg val) (reg env))
  (assign val (const procedure-environment))
  (assign val (op make-compiled-procedure) (label entry655) (reg env))
  (goto (label after-lambda656))
 entry655
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (env)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch657))
 compiled-branch658
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch657
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call659
 after-lambda656
  (perform (op define-variable!) (const enclosing-environment) (reg val) (reg env))
  (assign val (const enclosing-environment))
  (assign val (op make-compiled-procedure) (label entry660) (reg env))
  (goto (label after-lambda661))
 entry660
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (env)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch662))
 compiled-branch663
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch662
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call664
 after-lambda661
  (perform (op define-variable!) (const first-frame) (reg val) (reg env))
  (assign val (const first-frame))
  (assign val (const ()))
  (perform (op define-variable!) (const the-empty-environment) (reg val) (reg env))
  (assign val (const the-empty-environment))
  (assign val (op make-compiled-procedure) (label entry665) (reg env))
  (goto (label after-lambda666))
 entry665
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (variables values)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (assign val (op lookup-variable-value) (const values) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const variables) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch667))
 compiled-branch668
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch667
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call669
 after-lambda666
  (perform (op define-variable!) (const make-frame) (reg val) (reg env))
  (assign val (const make-frame))
  (assign val (op make-compiled-procedure) (label entry670) (reg env))
  (goto (label after-lambda671))
 entry670
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (frame)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const frame) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch672))
 compiled-branch673
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch672
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call674
 after-lambda671
  (perform (op define-variable!) (const frame-variables) (reg val) (reg env))
  (assign val (const frame-variables))
  (assign val (op make-compiled-procedure) (label entry675) (reg env))
  (goto (label after-lambda676))
 entry675
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (frame)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const frame) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch677))
 compiled-branch678
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch677
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call679
 after-lambda676
  (perform (op define-variable!) (const frame-values) (reg val) (reg env))
  (assign val (const frame-values))
  (assign val (op make-compiled-procedure) (label entry680) (reg env))
  (goto (label after-lambda681))
 entry680
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (var val frame)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const set-car!) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const frame) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch682))
 compiled-branch683
  (assign continue (label after-call684))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch682
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call684
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const var) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch685))
 compiled-branch686
  (assign continue (label after-call687))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch685
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call687
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const frame) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch688))
 compiled-branch689
  (assign continue (label after-call690))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch688
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call690
  (restore env)
  (restore continue)
  (assign proc (op lookup-variable-value) (const set-cdr!) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const frame) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch691))
 compiled-branch692
  (assign continue (label after-call693))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch691
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call693
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const val) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch694))
 compiled-branch695
  (assign continue (label after-call696))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch694
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call696
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const frame) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch697))
 compiled-branch698
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch697
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call699
 after-lambda681
  (perform (op define-variable!) (const add-binding-to-frame!) (reg val) (reg env))
  (assign val (const add-binding-to-frame!))
  (assign val (op make-compiled-procedure) (label entry700) (reg env))
  (goto (label after-lambda701))
 entry700
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (vars vals base-env)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const length) (reg env))
  (assign val (op lookup-variable-value) (const vals) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch708))
 compiled-branch709
  (assign continue (label after-call710))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch708
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call710
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const length) (reg env))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch705))
 compiled-branch706
  (assign continue (label after-call707))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch705
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call707
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch711))
 compiled-branch712
  (assign continue (label after-call713))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch711
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call713
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch703))
 true-branch702
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save continue)
  (save proc)
  (assign val (op lookup-variable-value) (const base-env) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const make-frame) (reg env))
  (assign val (op lookup-variable-value) (const vals) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch714))
 compiled-branch715
  (assign continue (label after-call716))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch714
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call716
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch717))
 compiled-branch718
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch717
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call719
 false-branch703
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const <) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const length) (reg env))
  (assign val (op lookup-variable-value) (const vals) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch726))
 compiled-branch727
  (assign continue (label after-call728))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch726
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call728
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const length) (reg env))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch723))
 compiled-branch724
  (assign continue (label after-call725))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch723
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call725
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch729))
 compiled-branch730
  (assign continue (label after-call731))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch729
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call731
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch721))
 true-branch720
  (assign proc (op lookup-variable-value) (const error) (reg env))
  (assign val (op lookup-variable-value) (const vals) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (const "Too many arguments supplied "))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch732))
 compiled-branch733
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch732
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call734
 false-branch721
  (assign proc (op lookup-variable-value) (const error) (reg env))
  (assign val (op lookup-variable-value) (const vals) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (const "Too few arguments supplied "))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch735))
 compiled-branch736
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch735
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call737
 after-if722
 after-if704
 after-lambda701
  (perform (op define-variable!) (const xtend-environment) (reg val) (reg env))
  (assign val (const xtend-environment))
  (assign val (op make-compiled-procedure) (label entry738) (reg env))
  (goto (label after-lambda739))
 entry738
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (var env)) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry740) (reg env))
  (goto (label after-lambda741))
 entry740
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (env)) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry742) (reg env))
  (goto (label after-lambda743))
 entry742
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (vars vals)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch747))
 compiled-branch748
  (assign continue (label after-call749))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch747
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call749
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch745))
 true-branch744
  (assign proc (op lookup-variable-value) (const env-loop) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const enclosing-environment) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch750))
 compiled-branch751
  (assign continue (label after-call752))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch750
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call752
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch753))
 compiled-branch754
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch753
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call755
 false-branch745
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch759))
 compiled-branch760
  (assign continue (label after-call761))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch759
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call761
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const var) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch762))
 compiled-branch763
  (assign continue (label after-call764))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch762
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call764
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch757))
 true-branch756
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const vals) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch765))
 compiled-branch766
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch765
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call767
 false-branch757
  (assign proc (op lookup-variable-value) (const scan) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const vals) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch771))
 compiled-branch772
  (assign continue (label after-call773))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch771
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call773
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch768))
 compiled-branch769
  (assign continue (label after-call770))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch768
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call770
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch774))
 compiled-branch775
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch774
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call776
 after-if758
 after-if746
 after-lambda743
  (perform (op define-variable!) (const scan) (reg val) (reg env))
  (assign val (const scan))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (assign val (op lookup-variable-value) (const the-empty-environment) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch780))
 compiled-branch781
  (assign continue (label after-call782))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch780
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call782
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch778))
 true-branch777
  (assign proc (op lookup-variable-value) (const error) (reg env))
  (assign val (op lookup-variable-value) (const var) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const "Unbound variable "))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch783))
 compiled-branch784
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch783
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call785
 false-branch778
  (assign proc (op make-compiled-procedure) (label entry786) (reg env))
  (goto (label after-lambda787))
 entry786
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (frame)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const scan) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const frame-values) (reg env))
  (assign val (op lookup-variable-value) (const frame) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch791))
 compiled-branch792
  (assign continue (label after-call793))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch791
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call793
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const frame-variables) (reg env))
  (assign val (op lookup-variable-value) (const frame) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch788))
 compiled-branch789
  (assign continue (label after-call790))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch788
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call790
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch794))
 compiled-branch795
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch794
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call796
 after-lambda787
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const first-frame) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch797))
 compiled-branch798
  (assign continue (label after-call799))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch797
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call799
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch800))
 compiled-branch801
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch800
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call802
 after-if779
 after-lambda741
  (perform (op define-variable!) (const env-loop) (reg val) (reg env))
  (assign val (const env-loop))
  (assign proc (op lookup-variable-value) (const env-loop) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch803))
 compiled-branch804
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch803
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call805
 after-lambda739
  (perform (op define-variable!) (const lookup-variable-value) (reg val) (reg env))
  (assign val (const lookup-variable-value))
  (assign val (op make-compiled-procedure) (label entry806) (reg env))
  (goto (label after-lambda807))
 entry806
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (var val env)) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry808) (reg env))
  (goto (label after-lambda809))
 entry808
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (env)) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry810) (reg env))
  (goto (label after-lambda811))
 entry810
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (vars vals)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch815))
 compiled-branch816
  (assign continue (label after-call817))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch815
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call817
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch813))
 true-branch812
  (assign proc (op lookup-variable-value) (const env-loop) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const enclosing-environment) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch818))
 compiled-branch819
  (assign continue (label after-call820))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch818
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call820
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch821))
 compiled-branch822
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch821
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call823
 false-branch813
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch827))
 compiled-branch828
  (assign continue (label after-call829))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch827
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call829
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const var) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch830))
 compiled-branch831
  (assign continue (label after-call832))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch830
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call832
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch825))
 true-branch824
  (assign proc (op lookup-variable-value) (const set-car!) (reg env))
  (assign val (op lookup-variable-value) (const val) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const vals) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch833))
 compiled-branch834
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch833
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call835
 false-branch825
  (assign proc (op lookup-variable-value) (const scan) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const vals) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch839))
 compiled-branch840
  (assign continue (label after-call841))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch839
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call841
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch836))
 compiled-branch837
  (assign continue (label after-call838))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch836
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call838
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch842))
 compiled-branch843
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch842
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call844
 after-if826
 after-if814
 after-lambda811
  (perform (op define-variable!) (const scan) (reg val) (reg env))
  (assign val (const scan))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (assign val (op lookup-variable-value) (const the-empty-environment) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch848))
 compiled-branch849
  (assign continue (label after-call850))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch848
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call850
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch846))
 true-branch845
  (assign proc (op lookup-variable-value) (const error) (reg env))
  (assign val (op lookup-variable-value) (const var) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const "Unbound variable -- SET! "))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch851))
 compiled-branch852
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch851
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call853
 false-branch846
  (assign proc (op make-compiled-procedure) (label entry854) (reg env))
  (goto (label after-lambda855))
 entry854
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (frame)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const scan) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const frame-values) (reg env))
  (assign val (op lookup-variable-value) (const frame) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch859))
 compiled-branch860
  (assign continue (label after-call861))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch859
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call861
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const frame-variables) (reg env))
  (assign val (op lookup-variable-value) (const frame) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch856))
 compiled-branch857
  (assign continue (label after-call858))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch856
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call858
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch862))
 compiled-branch863
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch862
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call864
 after-lambda855
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const first-frame) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch865))
 compiled-branch866
  (assign continue (label after-call867))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch865
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call867
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch868))
 compiled-branch869
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch868
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call870
 after-if847
 after-lambda809
  (perform (op define-variable!) (const env-loop) (reg val) (reg env))
  (assign val (const env-loop))
  (assign proc (op lookup-variable-value) (const env-loop) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch871))
 compiled-branch872
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch871
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call873
 after-lambda807
  (perform (op define-variable!) (const set-variable-value!) (reg val) (reg env))
  (assign val (const set-variable-value!))
  (assign val (op make-compiled-procedure) (label entry874) (reg env))
  (goto (label after-lambda875))
 entry874
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (var val env)) (reg argl) (reg env))
  (assign proc (op make-compiled-procedure) (label entry876) (reg env))
  (goto (label after-lambda877))
 entry876
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (frame)) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry878) (reg env))
  (goto (label after-lambda879))
 entry878
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (vars vals)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch883))
 compiled-branch884
  (assign continue (label after-call885))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch883
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call885
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch881))
 true-branch880
  (assign proc (op lookup-variable-value) (const add-binding-to-frame!) (reg env))
  (assign val (op lookup-variable-value) (const frame) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const val) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (op lookup-variable-value) (const var) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch886))
 compiled-branch887
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch886
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call888
 false-branch881
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch892))
 compiled-branch893
  (assign continue (label after-call894))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch892
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call894
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const var) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch895))
 compiled-branch896
  (assign continue (label after-call897))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch895
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call897
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch890))
 true-branch889
  (assign proc (op lookup-variable-value) (const set-car!) (reg env))
  (assign val (op lookup-variable-value) (const val) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const vals) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch898))
 compiled-branch899
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch898
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call900
 false-branch890
  (assign proc (op lookup-variable-value) (const scan) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const vals) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch904))
 compiled-branch905
  (assign continue (label after-call906))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch904
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call906
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const vars) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch901))
 compiled-branch902
  (assign continue (label after-call903))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch901
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call903
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch907))
 compiled-branch908
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch907
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call909
 after-if891
 after-if882
 after-lambda879
  (perform (op define-variable!) (const scan) (reg val) (reg env))
  (assign val (const scan))
  (assign proc (op lookup-variable-value) (const scan) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const frame-values) (reg env))
  (assign val (op lookup-variable-value) (const frame) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch913))
 compiled-branch914
  (assign continue (label after-call915))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch913
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call915
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const frame-variables) (reg env))
  (assign val (op lookup-variable-value) (const frame) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch910))
 compiled-branch911
  (assign continue (label after-call912))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch910
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call912
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch916))
 compiled-branch917
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch916
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call918
 after-lambda877
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const first-frame) (reg env))
  (assign val (op lookup-variable-value) (const env) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch919))
 compiled-branch920
  (assign continue (label after-call921))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch919
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call921
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch922))
 compiled-branch923
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch922
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call924
 after-lambda875
  (perform (op define-variable!) (const define-variable!) (reg val) (reg env))
  (assign val (const define-variable!))
  (assign val (op make-compiled-procedure) (label entry925) (reg env))
  (goto (label after-lambda926))
 entry925
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (assign proc (op make-compiled-procedure) (label entry927) (reg env))
  (goto (label after-lambda928))
 entry927
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (initial-env)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const define-variable!) (reg env))
  (assign val (op lookup-variable-value) (const initial-env) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const #t))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (const #t))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch929))
 compiled-branch930
  (assign continue (label after-call931))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch929
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call931
  (restore env)
  (restore continue)
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const define-variable!) (reg env))
  (assign val (op lookup-variable-value) (const initial-env) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const #f))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (const #f))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch932))
 compiled-branch933
  (assign continue (label after-call934))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch932
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call934
  (restore env)
  (restore continue)
  (assign val (op lookup-variable-value) (const initial-env) (reg env))
  (goto (reg continue))
 after-lambda928
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const xtend-environment) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const the-empty-environment) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const primitive-procedure-objects) (reg env))
  (assign argl (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch938))
 compiled-branch939
  (assign continue (label after-call940))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch938
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call940
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const primitive-procedure-names) (reg env))
  (assign argl (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch935))
 compiled-branch936
  (assign continue (label after-call937))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch935
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call937
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch941))
 compiled-branch942
  (assign continue (label after-call943))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch941
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call943
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch944))
 compiled-branch945
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch944
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call946
 after-lambda926
  (perform (op define-variable!) (const setup-environment) (reg val) (reg env))
  (assign val (const setup-environment))
  (assign val (op make-compiled-procedure) (label entry947) (reg env))
  (goto (label after-lambda948))
 entry947
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const tagged-list?) (reg env))
  (assign val (const primitive))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch949))
 compiled-branch950
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch949
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call951
 after-lambda948
  (perform (op define-variable!) (const primitive-procedure?) (reg val) (reg env))
  (assign val (const primitive-procedure?))
  (assign val (op make-compiled-procedure) (label entry952) (reg env))
  (goto (label after-lambda953))
 entry952
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cadr) (reg env))
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch954))
 compiled-branch955
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch954
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call956
 after-lambda953
  (perform (op define-variable!) (const primitive-implementation) (reg val) (reg env))
  (assign val (const primitive-implementation))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const list) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const list))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch990))
 compiled-branch991
  (assign continue (label after-call992))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch990
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call992
  (assign argl (op list) (reg val))
  (restore env)
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const <) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const <))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch987))
 compiled-branch988
  (assign continue (label after-call989))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch987
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call989
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const >) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const >))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch984))
 compiled-branch985
  (assign continue (label after-call986))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch984
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call986
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const /) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const /))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch981))
 compiled-branch982
  (assign continue (label after-call983))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch981
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call983
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const =) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const =))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch978))
 compiled-branch979
  (assign continue (label after-call980))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch978
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call980
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const *) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const *))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch975))
 compiled-branch976
  (assign continue (label after-call977))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch975
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call977
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const -) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const -))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch972))
 compiled-branch973
  (assign continue (label after-call974))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch972
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call974
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const +) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const +))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch969))
 compiled-branch970
  (assign continue (label after-call971))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch969
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call971
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const null?) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const null?))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch966))
 compiled-branch967
  (assign continue (label after-call968))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch966
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call968
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const cons) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const cons))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch963))
 compiled-branch964
  (assign continue (label after-call965))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch963
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call965
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const cdr) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const cdr))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch960))
 compiled-branch961
  (assign continue (label after-call962))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch960
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call962
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (assign val (op lookup-variable-value) (const car) (reg env))
  (assign argl (op list) (reg val))
  (assign val (const car))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch957))
 compiled-branch958
  (assign continue (label after-call959))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch957
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call959
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch993))
 compiled-branch994
  (assign continue (label after-call995))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch993
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call995
  (restore env)
  (perform (op define-variable!) (const primitive-procedures) (reg val) (reg env))
  (assign val (const primitive-procedures))
  (restore continue)
  (assign val (op make-compiled-procedure) (label entry996) (reg env))
  (goto (label after-lambda997))
 entry996
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (save continue)
  (assign unev (op lookup-variable-value) (const primitive-procedures) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign temp2 (reg proc))
  (assign temp1 (const ()))
  (assign unev (op reverse) (reg unev))
 map-cond998
  (test (op null?) (reg unev))
  (branch (label map-return999))
  (assign argl (op car) (reg unev))
  (assign argl (op list) (reg argl))
  (assign unev (op cdr) (reg unev))
  (assign proc (reg temp2))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1001))
 compiled-branch1002
  (assign continue (label map-push1000))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1001
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (label map-push1000))
 after-call1003
 map-push1000
  (assign temp1 (op cons) (reg val) (reg temp1))
  (goto (label map-cond998))
 map-return999
  (assign val (reg temp1))
  (restore continue)
  (goto (reg continue))
 after-lambda997
  (perform (op define-variable!) (const primitive-procedure-names) (reg val) (reg env))
  (assign val (const primitive-procedure-names))
  (assign val (op make-compiled-procedure) (label entry1004) (reg env))
  (goto (label after-lambda1005))
 entry1004
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (save continue)
  (assign unev (op lookup-variable-value) (const primitive-procedures) (reg env))
  (assign proc (op make-compiled-procedure) (label entry1009) (reg env))
  (goto (label after-lambda1010))
 entry1009
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cadr) (reg env))
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1011))
 compiled-branch1012
  (assign continue (label after-call1013))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1011
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1013
  (assign argl (op list) (reg val))
  (assign val (const primitive))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1014))
 compiled-branch1015
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1014
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call1016
 after-lambda1010
  (assign temp2 (reg proc))
  (assign temp1 (const ()))
  (assign unev (op reverse) (reg unev))
 map-cond1006
  (test (op null?) (reg unev))
  (branch (label map-return1007))
  (assign argl (op car) (reg unev))
  (assign argl (op list) (reg argl))
  (assign unev (op cdr) (reg unev))
  (assign proc (reg temp2))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1017))
 compiled-branch1018
  (assign continue (label map-push1008))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1017
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (label map-push1008))
 after-call1019
 map-push1008
  (assign temp1 (op cons) (reg val) (reg temp1))
  (goto (label map-cond1006))
 map-return1007
  (assign val (reg temp1))
  (restore continue)
  (goto (reg continue))
 after-lambda1005
  (perform (op define-variable!) (const primitive-procedure-objects) (reg val) (reg env))
  (assign val (const primitive-procedure-objects))
  (assign val (op make-compiled-procedure) (label entry1020) (reg env))
  (goto (label after-lambda1021))
 entry1020
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc args)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const primitive-implementation) (reg env))
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1022))
 compiled-branch1023
  (assign continue (label proc-return1025))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 proc-return1025
  (assign proc (reg val))
  (goto (label after-call1024))
 primitive-branch1022
  (assign proc (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1024
  (restore env)
  (restore continue)
  (assign argl (op lookup-variable-value) (const args) (reg env))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1026))
 compiled-branch1027
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1026
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call1028
 after-lambda1021
  (perform (op define-variable!) (const apply-primitive-procedure) (reg val) (reg env))
  (assign val (const apply-primitive-procedure))
  (assign val (const "s450==> "))
  (perform (op define-variable!) (const input-prompt) (reg val) (reg env))
  (assign val (const input-prompt))
  (assign val (op make-compiled-procedure) (label entry1029) (reg env))
  (goto (label after-lambda1030))
 entry1029
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const prompt-for-input) (reg env))
  (assign val (op lookup-variable-value) (const input-prompt) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1031))
 compiled-branch1032
  (assign continue (label after-call1033))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1031
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1033
  (restore env)
  (restore continue)
  (save continue)
  (save env)
  (assign proc (op make-compiled-procedure) (label entry1034) (reg env))
  (goto (label after-lambda1035))
 entry1034
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (input)) (reg argl) (reg env))
  (assign proc (op make-compiled-procedure) (label entry1036) (reg env))
  (goto (label after-lambda1037))
 entry1036
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (output)) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const user-print) (reg env))
  (assign val (op lookup-variable-value) (const output) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1038))
 compiled-branch1039
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1038
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call1040
 after-lambda1037
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const xeval) (reg env))
  (assign val (op lookup-variable-value) (const the-global-environment) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const input) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1041))
 compiled-branch1042
  (assign continue (label after-call1043))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1041
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1043
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1044))
 compiled-branch1045
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1044
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call1046
 after-lambda1035
  (save proc)
  (assign proc (op lookup-variable-value) (const read) (reg env))
  (assign argl (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1047))
 compiled-branch1048
  (assign continue (label after-call1049))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1047
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1049
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1050))
 compiled-branch1051
  (assign continue (label after-call1052))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1050
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1052
  (restore env)
  (restore continue)
  (assign proc (op lookup-variable-value) (const s450) (reg env))
  (assign argl (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1053))
 compiled-branch1054
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1053
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call1055
 after-lambda1030
  (perform (op define-variable!) (const s450) (reg val) (reg env))
  (assign val (const s450))
  (assign val (op make-compiled-procedure) (label entry1056) (reg env))
  (goto (label after-lambda1057))
 entry1056
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (string)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const newline) (reg env))
  (assign argl (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1058))
 compiled-branch1059
  (assign continue (label after-call1060))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1058
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1060
  (restore env)
  (restore continue)
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const newline) (reg env))
  (assign argl (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1061))
 compiled-branch1062
  (assign continue (label after-call1063))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1061
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1063
  (restore env)
  (restore continue)
  (assign proc (op lookup-variable-value) (const display) (reg env))
  (assign val (op lookup-variable-value) (const string) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1064))
 compiled-branch1065
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1064
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call1066
 after-lambda1057
  (perform (op define-variable!) (const prompt-for-input) (reg val) (reg env))
  (assign val (const prompt-for-input))
  (assign val (op make-compiled-procedure) (label entry1067) (reg env))
  (goto (label after-lambda1068))
 entry1067
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (object)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const compound-procedure?) (reg env))
  (assign val (op lookup-variable-value) (const object) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1072))
 compiled-branch1073
  (assign continue (label after-call1074))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1072
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1074
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch1070))
 true-branch1069
  (assign proc (op lookup-variable-value) (const display) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (assign val (const <procedure-env>))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (assign proc (op lookup-variable-value) (const procedure-body) (reg env))
  (assign val (op lookup-variable-value) (const object) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1078))
 compiled-branch1079
  (assign continue (label after-call1080))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1078
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1080
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const procedure-parameters) (reg env))
  (assign val (op lookup-variable-value) (const object) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1075))
 compiled-branch1076
  (assign continue (label after-call1077))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1075
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1077
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (const compound-procedure))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1081))
 compiled-branch1082
  (assign continue (label after-call1083))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1081
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1083
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1084))
 compiled-branch1085
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1084
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call1086
 false-branch1070
  (assign proc (op lookup-variable-value) (const display) (reg env))
  (assign val (op lookup-variable-value) (const object) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1087))
 compiled-branch1088
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1087
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call1089
 after-if1071
 after-lambda1068
  (perform (op define-variable!) (const user-print) (reg val) (reg env))
  (assign val (const user-print))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const setup-environment) (reg env))
  (assign argl (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1090))
 compiled-branch1091
  (assign continue (label after-call1092))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1090
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1092
  (restore env)
  (perform (op define-variable!) (const the-global-environment) (reg val) (reg env))
  (assign val (const the-global-environment))
  (restore continue)
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const display) (reg env))
  (assign val (const "... loaded the metacircular evaluator."))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1093))
 compiled-branch1094
  (assign continue (label after-call1095))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1093
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1095
  (restore env)
  (restore continue)
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const newline) (reg env))
  (assign argl (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1096))
 compiled-branch1097
  (assign continue (label after-call1098))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1096
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
 after-call1098
  (restore env)
  (restore continue)
  (assign proc (op lookup-variable-value) (const s450) (reg env))
  (assign argl (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch1099))
 compiled-branch1100
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
 primitive-branch1099
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
 after-call1101
 )
)